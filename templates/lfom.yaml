{% macro render() %}{% include "lfom.yaml"%}{% endmacro %}

# inputs which will be passed in explicitly later: q

{% set hl_lfom = opt.HL_LFOM %} # optional input
{% set S_orifice = opt.S_LFOM_ORIFICE %} # optional input

# calculate number of orifice rows for LFOM
{% set num_lfom_rows = lfom.n_lfom_rows(q, hl_lfom) %}

# calcuates center to center spacing between rows
{% set B_orifice_rows = hl_lfom/num_lfom_rows %}

# calculate nominal diameter of lfom
{% set OD_lfom = pipe.OD(lfom.nom_diam_lfom_pipe(q, hl_lfom)) %}

# calculate the diameter of the lfom orifices
{% set D_orifice_lfom = lfom.orifice_diameter(q, hl_lfom, mat.DIAM_DRILL_ENG) %}

# calculate the number of orifices per row - output is a list
{% set num_orifices_final, centerline = lfom.n_lfom_orifices_fusion(q, hl_lfom, mat.DIAM_DRILL_ENG, num_lfom_rows)%}

# render the universal constants yaml
{% set constants = aide_render(strip_jinja(constants.yaml)) %}

- lfom:
  - dp:
    - num_rows : {{ num_lfom_rows }}
    - B_orifice_rows : {{ B_orifice_rows }}
    - OD_lfom : {{ OD_lfom }}
    - D_orifice : {{ D_orifice_lfom }}
    - S_orifice : {{ S_orifice }}
    - row0 : {{ num_orifices_final[0] }}
    - center0 : {{ centerline[0] }}
    - row1 : {{ num_orifices_final[1] }}
    - center1 : {{ centerline[1] }}
    - row2 : {{ num_orifices_final[2] }}
    - center2 : {{ centerline[2] }}
    - row3 : {{ num_orifices_final[3] }}
    - center3 : {{ centerline[3] }}
    - row4 : {{ num_orifices_final[4] }}
    - center4 : {{ centerline[4] }}
    - row5 : {{ num_orifices_final[5] }}
    - center5 : {{ centerline[5] }}
    - row6 : {{ num_orifices_final[6] }}
    - center6 : {{ centerline[6] }}
    - row7 : {{ num_orifices_final[7] }}
    - center7 : {{ centerline[7] }}
  - constants:
    - RATIO_VC_ORIFICE : {{ constants.RATIO_VC_ORIFICE }}
    - GRAVITY : {{ constants.GRAVITY }}
    - ratio_safety : 1.5
    - sdr : 26
    - S_orifice : 1 * u.cm
    - hl : 20 * u.cm
